from telegram import Update
from telegram.ext import ContextTypes, CommandHandler, MessageHandler, filters
from handlers.inlineButtons import *
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
import json
from pathlib import Path

config_path = Path(__file__).parent.parent / 'config.json'

with open(config_path, 'r', encoding='utf-8') as f:
    config = json.load(f)

OWNER = config["OWNER"]

async def admin_panel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    uid = update.effective_user.id
    if uid not in ADMIN_IDS:
        await update.message.reply_text("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return

    keyboard = [
        [InlineKeyboardButton("üì• –ó–∞—è–≤–∫–∏ –Ω–∞ –≤—ã–≤–æ–¥", callback_data="admin_withdraws")],
        [InlineKeyboardButton("üë• –ü–∞—Ä—Ç–Ω—ë—Ä—ã", callback_data="partners")],
        [InlineKeyboardButton("üì¢ –†–∞—Å—Å—ã–ª–∫–∞", callback_data="admin_broadcast")],
        [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_stats")]
    ]
    if uid == OWNER:
        keyboard.append([InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞", callback_data="admin_add")])
        keyboard.append([InlineKeyboardButton("üí≤ –ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É –∑–∞ –∑–∞—Ö–æ–¥ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∫–µ", callback_data="admin_set_price_referred")])
        keyboard.append([InlineKeyboardButton("üí≤ –ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ", callback_data="admin_set_price_inviter")])
    
    await update.message.reply_text("üõ† –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:", reply_markup=InlineKeyboardMarkup(keyboard))